version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: grpc-mysql
    environment:
      MYSQL_ROOT_PASSWORD: rootpass
      MYSQL_DATABASE: testdb
      MYSQL_USER: testuser
      MYSQL_PASSWORD: testpass
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - grpc-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-prootpass"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for distributed locking
  redis:
    image: redis:7-alpine
    container_name: grpc-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - grpc-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # etcd for distributed locking (alternative)
  etcd:
    image: quay.io/coreos/etcd:v3.5.0
    container_name: grpc-etcd
    command: etcd --advertise-client-urls http://0.0.0.0:2379 --listen-client-urls http://0.0.0.0:2379
    ports:
      - "2379:2379"
    volumes:
      - etcd_data:/etcd-data
    networks:
      - grpc-network
    healthcheck:
      test: ["CMD", "etcdctl", "endpoint", "health"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Prometheus for metrics
  prometheus:
    image: prom/prometheus:v2.45.0
    container_name: grpc-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - grpc-network
    depends_on:
      - mysql
      - redis

  # Grafana for visualization
  grafana:
    image: grafana/grafana:10.0.0
    container_name: grpc-grafana
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
      GF_USERS_ALLOW_SIGN_UP: false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/datasources:/etc/grafana/provisioning/datasources
    networks:
      - grpc-network
    depends_on:
      - prometheus

  # gRPC Server (optional - can be run locally)
  grpc-server:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: grpc-server
    ports:
      - "50051:50051"
      - "2112:2112"
    environment:
      MYSQL_DSN: "testuser:testpass@tcp(mysql:3306)/testdb"
      LOCK_TYPE: "redis"
      REDIS_ADDR: "redis:6379"
      ETCD_ENDPOINTS: "etcd:2379"
      LOG_LEVEL: "info"
      HEALTHCHECK_EXTERNAL: "on"
    networks:
      - grpc-network
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
      etcd:
        condition: service_healthy

volumes:
  mysql_data:
  redis_data:
  etcd_data:
  prometheus_data:
  grafana_data:

networks:
  grpc-network:
    driver: bridge 